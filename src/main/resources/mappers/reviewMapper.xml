<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.reviews.model.mapper.ReviewMapper">

    <resultMap id="review" type="reviewDto">
        <result column="review_id" property="reviewId"/>
        <result column="plan_id" property="planId"/>
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="view_count" property="viewCount"/>
        <result column="scrap_count" property="scrapCount"/>
        <result column="like_count" property="likeCount"/>
        <result column="comment_count" property="commentCount"/>
        <result column="reg_date" property="regDate"/>
        <result column="mod_date" property="modDate"/>
        <result column="is_like" property="isLike"/>
        <result column="is_scrap" property="isScrap"/>
    </resultMap>

    <resultMap id="reviewDetail" type="reviewDto">
        <result column="review_id" property="reviewId"/>
        <result column="plan_id" property="planId"/>
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="view_count" property="viewCount"/>
        <result column="scrap_count" property="scrapCount"/>
        <result column="like_count" property="likeCount"/>
        <result column="comment_count" property="commentCount"/>
        <result column="reg_date" property="regDate"/>
        <result column="mod_date" property="modDate"/>
        <result column="is_like" property="isLike"/>
        <result column="is_scrap" property="isScrap"/>
    </resultMap>

    <resultMap id="reviewImage" type="reviewImageDto">
        <result column="review_image_id" property="reviewImageId"/>
        <result column="review_id" property="reviewId"/>
        <result column="url" property="url"/>
        <result column="name" property="name"/>
    </resultMap>

    <select id="getAllReviews" parameterType="int" resultMap="review">
        SELECT
            review_id,
            plan_id,
            user_id,
            (
                SELECT name
                FROM users
                WHERE users.user_id = reviews.user_id
            ) as user_name,
            (
                SELECT
                    count(review_like_id)
                FROM
                    review_likes
                WHERE
                    review_likes.review_id = reviews.review_id and
                    review_likes.user_id = #{userId}
            ) as is_like,
            (
                SELECT
                    count(review_scrap_id)
                FROM
                    review_scraps
                WHERE
                    review_scraps.review_id = reviews.review_id and
                    review_scraps.user_id = #{userId}
            ) as is_scrap,
            title,
            content,
            view_count,
            scrap_count,
            like_count,
            comment_count,
            reg_date,
            mod_date
        FROM
            reviews
        ORDER BY
            reg_date DESC
        LIMIT
            10
    </select>

    <select id="getReview" parameterType="int" resultMap="reviewDetail">
        SELECT
            review_id,
            plan_id,
            user_id,
            (
                SELECT name
                FROM users
                WHERE users.user_id = reviews.user_id
            ) AS user_name,
            title,
            content,
            view_count,
            scrap_count,
            like_count,
            comment_count,
            reg_date,
            mod_date,
            (
                SELECT
                    count(review_like_id)
                FROM
                    review_likes
                WHERE
                    review_likes.review_id = #{reviewId} and
                    review_likes.user_id = #{userId}
            ) as is_like,
            (
                SELECT
                    count(review_scrap_id)
                FROM
                    review_scraps
                WHERE
                    review_scraps.review_id = #{reviewId} and
                    review_scraps.user_id = #{userId}
            ) as is_scrap
        FROM
            reviews
        WHERE
            review_id = #{reviewId}
    </select>

    <select id="getReviewsOfPlan" parameterType="int" resultMap="review">
        SELECT
            review_id,
            plan_id,
            user_id,
            title,
            content,
            view_count,
            scrap_count,
            like_count,
            reg_date,
            mod_date
        FROM
            reviews
        WHERE
            plan_id = #{planId}
    </select>

    <insert id="registerReview" parameterType="reviewDto">
        INSERT INTO
            reviews (plan_id, user_id, title, content)
        VALUES
            (#{planId}, #{userId}, #{title}, #{content})

        <selectKey keyProperty="reviewId" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="registerReviewImages" parameterType="list">
        INSERT INTO
            review_images(review_id, url, name)
        VALUES
            <foreach collection="reviewImages" item="reviewImage" separator=",">
                (#{reviewImage.reviewId}, #{reviewImage.url}, #{reviewImage.name})
            </foreach>
    </insert>

    <delete id="deleteReviewImages" parameterType="list">
        DELETE
        FROM
            review_images
        WHERE
            review_image_id in
            <foreach collection="reviewImages" item="image" open="(" separator="," close=")">
                #{image.revieImageId}
            </foreach>
    </delete>

    <update id="modifyReview" parameterType="reviewDto">
        UPDATE
            reviews
        SET
            title = #{title}, content = #{content}
        WHERE
            review_id = #{reviewId} AND user_id = #{userId}
    </update>

    <delete id="deleteReview" parameterType="reviewDto">
        DELETE
        FROM
            reviews
        WHERE
            review_id = #{reviewId} AND user_id = #{userId}
    </delete>

    <update id="updateCommentCount" parameterType="int">
        UPDATE reviews
        SET
            comment_count = (
                SELECT count(comments.comment_id)
                FROM comments
                WHERE comments.review_id = #{reviewId}
            )
        WHERE review_id = #{reviewId};
    </update>

    <update id="updateLikeCount" parameterType="int">
        UPDATE reviews
        SET
            like_count = (
                SELECT count(review_likes.user_id)
                FROM review_likes
                WHERE review_likes.review_id = #{reviewId}
            )
        WHERE review_id = #{reviewId};
    </update>

    <update id="updateScrapCount" parameterType="int">
        UPDATE reviews
        SET
            scrap_count = (
                SELECT count(review_scraps.user_id)
                FROM review_scraps
                WHERE review_scraps.review_id = #{reviewId}
            )
        WHERE review_id = #{reviewId};
    </update>

    <insert id="addLike"  parameterType="reviewLikeDto">
        INSERT INTO review_likes
        (review_id, user_id) values (#{reviewId}, #{userId})
    </insert>

    <delete id="deleteLike" parameterType="reviewLikeDto">
        DELETE
        FROM
            review_likes
        WHERE
            review_id = #{reviewId}
          and user_id = #{userId}
    </delete>

    <insert id="addScrap" parameterType="reviewScrapDto">
        INSERT INTO review_scraps
            (review_id, user_id) values (#{reviewId}, #{userId})
    </insert>

    <delete id="deleteScrap" parameterType="reviewScrapDto">
        DELETE
        FROM
            review_scraps
        WHERE
            review_id = #{reviewId}
          and user_id = #{userId}
    </delete>

    <select id="getPopularReviews" resultMap="review">
        SELECT
            review_id,
            plan_id,
            user_id,
            (
                SELECT name
                FROM users
                WHERE users.user_id = reviews.user_id
            ) AS user_name,
            title,
            content,
            view_count,
            scrap_count,
            like_count,
            comment_count,
            reg_date,
            mod_date
        FROM
            reviews
        ORDER BY
            view_count desc
        LIMIT 5
    </select>

    <select id="getReviewImages" parameterType="int" resultMap="reviewImage">
        SELECT
            review_image_id,
            review_id,
            url,
            name
        FROM
            review_images
        WHERE
            review_id = #{reviewId}
    </select>

    <select id="getScrapReviews" parameterType="int" resultMap="review">
        SELECT
            review_id,
            plan_id,
            user_id,
            (
                SELECT name
                FROM users
                WHERE users.user_id = reviews.user_id
            ) as user_name,
            (
                SELECT
                    count(review_like_id)
                FROM
                    review_likes
                WHERE
                    review_likes.review_id = reviews.review_id and
                    review_likes.user_id = #{userId}
            ) as is_like,
            (
                SELECT
                    count(review_scrap_id)
                FROM
                    review_scraps
                WHERE
                    review_scraps.review_id = reviews.review_id and
                    review_scraps.user_id = #{userId}
            ) as is_scrap,
            title,
            content,
            view_count,
            scrap_count,
            like_count,
            comment_count,
            reg_date,
            mod_date
        FROM
            reviews
        WHERE
            review_id IN (
                SELECT review_scraps.review_id
                FROM review_scraps
                WHERE review_scraps.user_id = #{userId}
            )
        ORDER BY
            reg_date DESC
        LIMIT
            10
    </select>

    <update id="updateViewCount" parameterType="int">
        UPDATE reviews
        SET view_count = view_count + 1
        WHERE review_id = #{reviewId}
    </update>
</mapper>